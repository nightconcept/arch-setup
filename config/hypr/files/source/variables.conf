# Variables
#   https://wiki.hyprland.org/Configuring/Variables/

general {
    # - mouse sensitivity (legacy, may cause bugs if not 1, prefer input:sensitivity)
    # sensitivity = 1

    # - size of the border around windows
    border_size = 2

    # - disable borders for floating windows
    # no_border_on_floating = false               

    # - gaps between windows
    gaps_in = 3

    # - gaps between windows and monitor edges
    gaps_out = 6

    # - gaps between workspaces (stacks with gaps_out)
    # gaps_workspaces = 0  # (invalid prop)

    # - border color for inactive windows
    col.inactive_border = $color_surface2

    # - border color for the active window
    col.active_border = $color_sky $color_peach 45deg

    # - inactive border color for window that cannot be added to a group
    col.nogroup_border = $color_red

    # - active border color for window that cannot be added to a group
    col.nogroup_border_active = $color_yellow

    # - in seconds, after how many seconds of cursor’s inactivity to hide it. Set to 0 for never
    cursor_inactive_timeout = 5

    # - which layout to use (dwindle or master)
    layout = master

    # - if true, will not warp the cursor in many cases (focusing, keybinds, etc)
    # no_cursor_warps = false

    # - if true, will not fall back to the next available window when moving focus in a direction where no window was found
    no_focus_fallback = true

    # - enables resizing windows by clicking and dragging on borders and gaps
    # resize_on_border = false

    # - extends the area around the border where you can click and drag on, only used when general:resize_on_border is on.
    # extend_border_grab_area = 15

    # - show a cursor icon when hovering over borders, only used when general:resize_on_border is on.
    # hover_icon_on_border = true

    # - master switch for allowing tearing to occur (https://wiki.hyprland.org/Configuring/Tearing/)
    # allow_tearing = false
}

decoration {
    # - rounded corners’ radius (in layout px)
    rounding = 4

    # - opacity of active windows (0.0 - 1.0)
    # active_opacity = 1

    # - opacity of inactive windows (0.0 - 1.0)
    # inactive_opacity = 1

    # - opacity of fullscreen windows (0.0 - 1.0)
    # fullscreen_opacity = 1

    # - enable drop shadows on windows
    drop_shadow = false

    # - shadow range (“size”) in layout px
    # shadow_range = 4

    # - (1 - 4), in what power to render the falloff (more power, the faster the falloff)
    # shadow_render_power = 3

    # - if true, the shadow will not be rendered behind the window itself, only around it.
    # shadow_ignore_window = true

    # - shadow’s color. Alpha dictates shadow’s opacity.
    # col.shadow = rgba(1a1a1aee)

    # - inactive shadow color. (if not set, will fall back to col.shadow)
    # col.shadow_inactive = unset
    #
    # - shadow’s rendering offset
    # shadow_offset = 0,0
    #
    # - shadow’s scale. 0.0 - 1.0
    # shadow_scale = 1.0

    # - enables dimming of inactive windows
    # dim_inactive = true

    # - how much inactive windows should be dimmed, 0.0 - 1.0
    # dim_strength = 0.1

    # - how much to dim the rest of the screen by when a special workspace is open. 0.0 - 1.0
    dim_special = 0.33

    # - how much the dimaround window rule should dim by. 0.0 - 1.0
    # dim_around = 0.4

    # - a path to a custom shader to be applied at the end of rendering. See examples/screenShader.frag for an example.
    #screen_shader = 

    blur {
        # - enable kawase window background blur
        enabled = false

        # - blur size (distance)
        # size = 8

        # - the amount of passes to perform
        # passes = 1

        # - make the blur layer ignore the opacity of the window
        ignore_opacity = true

        # - whether to enable further optimizations to the blur. Recommended to leave on, as it will massively improve performance.
        # new_optimizations = true

        # - if enabled, floating windows will ignore tiled windows in their blur. Only available if blur_new_optimizations is true. Will reduce overhead on floating blur significantly.
        # xray = false

        # - how much noise to apply. 0.0 - 1.0
        # noise = 0.0117

        # - contrast modulation for blur. 0.0 - 2.0
        # contrast = 0.8916

        # - brightness modulation for blur. 0.0 - 2.0
        # brightness = 0.8172

        # - increase saturation of blurred colors. 0.0 - 1.0
        # vibrancy = 0.1696

        # - how strong the effect of vibrancy is on dark areas . 0.0 - 1.0
        # vibrancy_darkness = 0.0

        # - whether to blur behind the special workspace (note: expensive)
        # special = false
    }
}

animations {
    # - enable animations
    # enabled = true

    # - enable first launch animation
    # first_launch_animation = true  # (invalid property)
}

input {
    # - appropriate XKB keymap parameter (You can find a list of models, layouts, variants and options in `/usr/share/X11/xkb/rules/base.lst`. Alternatively, you can use the `localectl` command to discover what is available on your system)
    # kb_model =

    # - appropriate XKB keymap parameter
    kb_layout = us,us

    # - appropriate XKB keymap parameter
    kb_variant = ,intl

    # - appropriate XKB keymap parameter
    kb_options = grp:shifts_toggle

    # - appropriate XKB keymap parameter
    # kb_rules =

    # - appropriate XKB keymap parameter
    # kb_file =

    # - engage numlock by default.
    numlock_by_default = true

    # - the repeat rate for held-down keys, in repeats per second
    repeat_rate = 30
    # repeat_rate = 15

    # - delay before a held-down key is repeated, in milliseconds.
    repeat_delay = 170
    # repeat_delay = 500

    # - sets the mouse input sensitivity. Value will be clamped to the range -1.0 to 1.0.
    # sensitivity = 0.0

    # - sets the cursor acceleration profile (adaptive or flat). Leave empty to use libinput’s default mode for your input device.
    # accel_profile = 

    # - switches RMB and LMB
    # left_handed = false

    # - sets the scroll method. Can be one of 2fg (2 fingers), edge, on_button_down, no_scroll.
    # scroll_method =

    # - sets the scroll button. Has to be an int, cannot be a string. Check wev if you have any doubts regarding the ID. 0 means default.
    # scroll_button = 0

    # - if the scroll button lock is enabled, the button does not need to be held down. Pressing and releasing the button once enables the button lock, the button is now considered logically held down. Pressing and releasing the button a second time logically releases the button. While the button is logically held down, motion events are converted to scroll events.
    # scroll_button_lock = 0

    # - inverts scrolling direction. When enabled, scrolling moves content directly instead of manipulating a scrollbar.
    # natural_scroll = false

    # - specify if and how cursor movement should affect window focus. See the note below.
    #    0 - Cursor movement will not change focus.
    #    1 - Cursor movement will always change focus to the window under the cursor.
    #    2 - Cursor focus will be detached from keyboard focus. Clicking on a window will move keyboard focus to that window.
    #    3 - Cursor focus will be completely separate from keyboard focus. Clicking on a window will not change keyboard focus.
    # follow_mouse = 1

    # - if disabled and `follow_mouse=1` then mouse focus will not switch to the hovered window unless the mouse crosses a window boundary
    # mouse_refocus = true

    # - if enabled (1 or 2), focus will change to the window under the cursor when changing from tiled-to-floating and vice versa. If 2, focus will also follow mouse on float-to-float switches.
    # float_switch_override_focus = 1

    touchpad {
        # - disable the touchpad while typing
        # disable_while_typing = true

        # - inverts scrolling direction. When enabled, scrolling moves content directly instead of manipulating a scrollbar
        natural_scroll = true

        # - multiplier applied to the amount of scroll movement
        # scroll_factor = 1.0

        # - sending LMB and RMB simultaneously will be interpreted as a middle click. This disables any touchpad area that would normally send a middle click based on location.
        # middle_button_emulation = false

        # - sets the tap button mapping for touchpad button emulation. Can be one of lrm (default) or lmr (Left, Middle, Right Buttons).
        # tap_button_map = 

        # - button presses with 1, 2, or 3 fingers will be mapped to LMB, RMB, and MMB respectively. This disables interpretation of clicks based on location on the touchpad.
        # clickfinger_behavior = false

        # - tapping on the touchpad with 1, 2, or 3 fingers will send LMB, RMB, and MMB respectively
        # tap-to-click = true

        # - when enabled, lifting the finger off for a short time while dragging will not drop the dragged item.
        # drag_lock = false

        # - sets the tap and drag mode for the touchpad
        # tap-and-drag = false
    }

    touchdevice {
        # - transform the input from touchdevices. The possible transformations are the same as those of the monitors
        # transform = 0

        # - the output to bind touch devices. Empty means unset and will use the current / autodetected
        # output =
    }

    tablet {
        #  - transform the input from tablets. The possible transformations are the same as those of the monitors
        # transform = 0

        #  - the output to bind tablets. Empty means unset and will use the current / autodetected
        # output = 

        #  - position of the mapped region in output layout
        # region_position = [0,0]

        #  - size of the mapped region. When this variable is set, tablet input will be mapped to the region. [0, 0] or invalid size means unset
        # region_size = [0,0]
    }
}

gestures {
    # - enable workspace swipe gesture
    # workspace_swipe = false

    # - how many fingers for the gesture
    # workspace_swipe_fingers = 3

    # - in px, the distance of the gesture
    # workspace_swipe_distance = 300

    # - invert the direction
    # workspace_swipe_invert = true

    # - minimum speed in px per timepoint to force the change ignoring cancel_ratio. Setting to 0 will disable this mechanic
    # workspace_swipe_min_speed_to_force = 30

    # - (0.0 - 1.0) how much the swipe has to proceed in order to commence it. (0.7 -> if > 0.7 * distance, switch, if less, revert)
    # workspace_swipe_cancel_ratio = 0.5

    # - whether a swipe right on the last workspace should create a new one
    # workspace_swipe_create_new = true

    # - if enabled, switching direction will be locked when you swipe past the direction_lock_threshold
    # workspace_swipe_direction_lock =  true

    # - in px, the distance to swipe before direction lock activates
    # workspace_swipe_direction_lock_threshold =  true

    # - if enabled, swiping will not clamp at the neighboring workspaces but continue to the further ones
    # workspace_swipe_forever = true

    # - if enabled, swiping will swipe on consecutive numbered workspaces
    # workspace_swipe_numbered = false

    # - if enabled, swiping will use the r prefix instead of the m prefix for finding workspaces. (requires disabled workspace_swipe_numbered)
    # workspace_swipe_use_r = false
}

group {
    # - whether new windows in a group spawn after current or at group tail
    # insert_after_current = true

    # - whether Hyprland should focus on the window that has just been moved out of the group
    # focus_removed_window = true

    # - active group border color
    col.border_active = $color_yellow

    # - inactive (out of focus) group border color
    col.border_inactive = $color_red

    # - active locked group border color
    col.border_locked_active = $color_blue

    # - inactive locked group border color
    col.border_locked_inactive = $color_cyan

    groupbar {
        # - font used to display groupbar titles
        font_family = monospace

        # - font size for the above
        font_size = 9

        # - whether to draw gradients under the titles of the above
        gradients =  false

        # - whether to render titles in the group bar decoration
        render_titles = false

        # - whether scrolling in the groupbar changes group active window
        scrolling = true

        # - controls the group bar text color
        text_color = 0xffffffff

        # - active group border color
        col.active = 0x66ffff00

        # - inactive (out of focus) group border color
        col.inactive = 0x66777700

        # - active locked group border color
        col.locked_active = 0x66ff5500

        # - inactive locked group border color
        col.locked_inactive = 0x66775500
    }
}

misc {
    # - disables the random hyprland logo / anime girl background
    disable_hyprland_logo = true

    # - disables the hyprland splash rendering. (requires a monitor reload to take effect)
    disable_splash_rendering = false

    # - makes the background always have hypr-chan, the hyprland mascot
    force_hypr_chan = false

    # - enforce any of the 3 default wallpapers. Setting this to 0 disables the anime background. -1 means “random” 
    force_default_wallpaper = 0

    # - controls the VFR status of hyprland. Heavily recommended to leave on true to conserve resources
    # vfr = true

    # - controls the VRR (Adaptive Sync) of your monitors. 0 - off, 1 - on, 2 - fullscreen only
    # vrr = 0

    # - if DPMS is set to off, wake up the monitors if the mouse moves.
    # mouse_move_enables_dpms = false

    # - if DPMS is set to off, wake up the monitors if a key is pressed
    # key_press_enables_dpms = false

    # - will make mouse focus follow the mouse when drag and dropping. Recommended to leave it enabled, especially for people using focus follows mouse at 0.
    # always_follow_on_dnd = true

    # - if true, will make keyboard-interactive layers keep their focus on mouse move (e.g. wofi, bemenu)
    # layers_hog_keyboard_focus = true

    # - if true, will animate manual window resizes/moves
    # animate_manual_resizes = false

    # - if true, will animate windows being dragged by mouse, note that this can cause weird behavior on some curves
    # animate_mouse_windowdragging = false

    # - if true, the config will not reload automatically on save, and instead needs to be reloaded with hyprctl reload. Might save on battery.
    # disable_autoreload = false

    # - enable window swallowing
    # enable_swallow = false

    # - the class regex to be used for windows that should be swallowed (usually, a terminal)
    # swallow_regex = ^(Alacritty)$

    # - the title regex to be used for windows that should not be swallowed by the windows specified in swallow_regex (e.g. wev). The regex is matched against the parent (e.g. Kitty) window’s title on the assumption that it changes to whatever process it’s running
    # swallow_exception_regex	= 

    # - whether Hyprland should focus an app that requests to be focused (an activate request)
    focus_on_activate = true

    # - disables direct scanout. Direct scanout attempts to reduce lag when there is only one fullscreen application on a screen (e.g. game). It is also recommended to set this to true if the fullscreen application shows graphical glitches
    # no_direct_scanout = true

    # - hides the cursor when the last input was a touch input until a mouse input is done
    # hide_cursor_on_touch = true

    # - whether mouse moving into a different monitor should focus it
    # mouse_move_focuses_monitor = true

    # - disables warnings about incompatible portal implementations
    # suppress_portal_warnings = false
    
    # - [Warning: buggy] starts rendering before your monitor displays a frame in order to lower latency
    # render_ahead_of_time = false

    # - how many ms of safezone to add to rendering ahead of time. Recommended 1-2
    # render_ahead_safezone = 1

    # - the factor to zoom by around the cursor. AKA. Magnifying glass. Minimum 1.0 (meaning no zoom)
    # cursor_zoom_factor = 1.0

    # - whether the zoom should follow the cursor rigidly (cursor is always centered if it can be) or loosely
    # cursor_zoom_rigid = false

    # - if true, will allow you to restart a lockscreen app in case it crashes (red screen of death)
    # allow_session_lock_restore = false

    # - change the background color. (requires enabled disable_hyprland_logo)
    # background_color = 0x111111

    # - close the special workspace if the last window is removed 
    # close_special_on_empty = true

    # - if there is a fullscreen window, whether a new tiled window opened should replace the fullscreen one or stay behind.
    #    0 - behind 
    #    1 - takes over 
    #    2 - unfullscreen the current fullscreen window
    new_window_takes_over_fullscreen = 2
}

binds {
    # - if disabled, will not pass the mouse events to apps / dragging windows around if a keybind has been triggered
    # pass_mouse_when_bound = false

    # - in ms, how many ms to wait after a scroll event to allow to pass another one for the binds
    # scroll_event_delay = 300

    # - if enabled, an attempt to switch to the currently focused workspace will instead switch to the previous workspace
    # - (go to the desired workspace and quickly come back with the same key)
    workspace_back_and_forth = true

    # - if enabled, workspaces don’t forget their previous workspace, so cycles can be created by switching to the first workspace in a sequence, then endlessly going to the previous workspace 
    allow_workspace_cycles = true

    # whether switching workspaces should 
    #    0 - center the cursor on the workspacem, or 
    #    1 - on the last active window for that workspace
    # workspace_center_on = 0

    # - sets the preferred focus finding method when using focuswindow/movewindow/etc with a direction.
    #    0 - history (recent have priority),
    #    1 - length (longer shared edges have priority)
    # focus_preferred_method = 0

    # - if enabled, dispatchers like moveintogroup, moveoutofgroup and movewindoworgroup will ignore lock per group
    # ignore_group_lock = false

    # - if enabled, when on a fullscreen window, movefocus will cycle fullscreen, if not, it will move the focus in a direction.
    # movefocus_cycles_fullscreen	= true
}

xwayland {
    # - uses the nearest neighbor filtering for xwayland apps, making them pixelated rather than blurry
    # use_nearest_neighbor = true

    # - forces a scale of 1 on xwayland windows on scaled displays
    # force_zero_scaling = false
}

