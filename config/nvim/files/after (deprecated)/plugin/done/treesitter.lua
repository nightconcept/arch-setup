-- Notes:
--      nvim-treesitter is the adaptation of tree-sitter for neovim

--      Treesitter provides a set of default capture groups (https://github.com/nvim-treesitter/nvim-treesitter/blob/master/CONTRIBUTING.md#highlights).
--
--      Create custom capture groups to customize colors for a given language:
--          - Open the file for which you want to write the custom query
--          - Run `:TSPlaygroundToggle` to open the tree-sitter playground
--          - Press `o` while the Playground is focused to open the Query Editor
--          - Write the query and check that it works
--          - Copy the query to the corresponding query file `~/.config/nvim/after/queries/{language}/highlights.scm`
--          - Test that it actually works by reopening the file and running the following commands with the cursor in place:
--              - `:TSHighlightCapturesUnderCursor` - shows you the capture groups for the text under the cursor, the customize capture group should appear there
--              - `:TSNodeUnderCursor` - shows you the selected node for the text under the cursor
--          - Apply the desired syntax colors via the theme configuration or using the vim api:
--              - `vim.api.nvim_set_hl(0, "@{custom-capture-group-name}", { fg = "#color", bg = "#color" })`

-- require 'nvim-treesitter.configs'.setup {
--     -- A list of parser names, or "all". Info at https://github.com/nvim-treesitter/nvim-treesitter#supported-languages
--     ensure_installed = { "bash", "css", "html", "javascript", "json", "lua", "markdown_inline", "typescript" },
--
--     -- Install parsers synchronously (only applied to `ensure_installed`)
--     sync_install = false,
--
--     -- Automatically install missing parsers when entering buffer
--     -- Recommendation: set to false if you don't have `tree-sitter` CLI installed locally
--     auto_install = true,
--
--     highlight = {
--         enable = true,
--         -- Instead of true it can also be a list of languages
--         -- Using this option may slow down your editor, and you may see some duplicate highlights.
--         additional_vim_regex_highlighting = false,
--     },
--
--     indent = {
--         enable = true,
--     },
-- }
